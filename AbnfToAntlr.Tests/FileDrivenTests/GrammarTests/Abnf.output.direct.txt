
// Augmented BNF Syntax Specification (RFC 5234 and RFC 7405 and Errata 5334)
//
// ABNF grammar based on:
//    RFC 5234 (Augmented BNF for Syntax Specifications)...
//    http://tools.ietf.org/html/rfc5234
//
//    and RFC 7405 (Case-Sensitive String Support in ABNF)...
//    https://tools.ietf.org/html/rfc7405
//
//    and Errata 5334...
//    https://www.rfc-editor.org/errata/eid5334

// -------------------------------------------------------
// -- 4. ABNF Definition of ABNF
// -------------------------------------------------------

rulelist       :  ( rule_1 | (c_wsp* c_nl) )+;

rule_1           :  rulename defined_as elements c_nl;
                       // continues if next line starts
                       //  with white space

rulename       :  ALPHA (ALPHA | DIGIT | '-')*;

defined_as     :  c_wsp* ('=' | ('=' '/')) c_wsp*;
                       // basic rules definition and
                       //  incremental alternatives

elements       :  alternation c_wsp*;

c_wsp          :  wsp | (c_nl wsp);

c_nl           :  comment | crlf;
                       // comment or newline

comment        :  ';' (wsp | VCHAR)* crlf;

alternation    :  concatenation
                  (c_wsp* '/' c_wsp* concatenation)*;

concatenation  :  repetition (c_wsp+ repetition)*;

repetition     :  (repeat)? element;

repeat         :  DIGIT+ | (DIGIT* '*' DIGIT*);

element        :  rulename | group | option |
                  char_val | num_val | PROSE_VAL;

group          :  '(' c_wsp* alternation c_wsp* ')';

option         :  '[' c_wsp* alternation c_wsp* ']';

char_val       :  case_insensitive_string |
                           case_sensitive_string;

case_insensitive_string :  (('%' ('I' | 'i')))? quoted_string;

case_sensitive_string  : (('%' ('S' | 's')) quoted_string) 
                         | (QUOTE ('\u0020'..'\u0026' | '\u0028'..'\u007E')* QUOTE); 
                              // quoted string of SP and VCHAR 
                              // without QUOTE

quoted_string  :  DQUOTE ('\u0020'..'\u0021' | '\u0023'..'\u007E')* DQUOTE; 
                       // quoted string of SP and VCHAR
                       //  without DQUOTE

num_val        :  '%' (bin_val | dec_val | hex_val);

bin_val        :  ('B' | 'b') BIT+
                  ( ('.' BIT+)+ | ('-' BIT+) )?;
                       // series of concatenated bit values
                       //  or single ONEOF range

dec_val        :  ('D' | 'd') DIGIT+
                  ( ('.' DIGIT+)+ | ('-' DIGIT+) )?;

hex_val        :  ('X' | 'x') hexdig+
                  ( ('.' hexdig+)+ | ('-' hexdig+) )?;

PROSE_VAL      :  '<' ('\u0020'..'\u003D' | '\u003F'..'\u007E')* '>';
                       // bracketed string of SP and VCHAR
                       //  without angles
                       // prose description, to be used as
                       //  last resort

// -------------------------------------------------------
// -- RFC 5234
// -- B.1. Core Rules
// -------------------------------------------------------

ALPHA          :  '\u0041'..'\u005A' | '\u0061'..'\u007A';   // A-Z / a-z

BIT            :  '0' | '1';

CHAR_1           :  '\u0001'..'\u007F';
                       // any 7-bit US-ASCII character,
                       //  excluding NUL

CR             :  '\u000D';
                       // carriage return

crlf           :  CR LF;
                       // Internet standard newline

CTL            :  '\u0000'..'\u001F' | '\u007F';
                       // controls

DIGIT          :  '\u0030'..'\u0039';
                       // 0-9

DQUOTE         :  '\u0022';
                       // " (Double Quote)

hexdig         :  DIGIT | ('A' | 'a') | ('B' | 'b') | ('C' | 'c') | ('D' | 'd') | ('E' | 'e') | ('F' | 'f');

HTAB           :  '\u0009';
                       // horizontal tab

LF             :  '\u000A';
                       // linefeed

lwsp           :  (wsp | (crlf wsp))*;
                       // Use of this linear-white-space rule
                       //  permits lines containing only white
                       //  space that are no longer legal in
                       //  mail headers and have caused
                       //  interoperability problems in other
                       //  contexts.
                       // Do not use when defining mail
                       //  headers and use with caution in
                       //  other contexts.

QUOTE          :  '\u0027';     // '

OCTET          :  '\u0000'..'\u00FF';
                       // 8 bits of data

SP             :  '\u0020';

VCHAR          :  '\u0021'..'\u007E';
                       // visible (printing) characters

wsp            :  SP | HTAB;
                       // white space