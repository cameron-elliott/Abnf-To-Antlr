; ANTLR3 reserved keywords
catch = ""
finally = ""
fragment = ""
grammar = ""
import = ""
lexer = ""
locals = ""
mode = ""
options = ""
parser = ""
returns = ""
throws = ""
tokens = ""

; ANTLR recommended reserved keywords
rule = ""

; Java reserved keywords
abstract = ""
assert = ""
boolean = ""
break = ""
byte = ""
case = ""
catch = "" ; ANTLR keyword too
char = ""
class = ""
const = ""
continue = ""
default = ""
do = ""
double = ""
else = ""
enum = ""
extends = ""
final = ""
finally = "" ; ANTLR keyword too
float = ""
for = ""
goto = ""
if = ""
implements = ""
import = "" ; ANTLR keyword too
instanceof = ""
int = ""
interface = ""
long = ""
native = ""
new = ""
package = ""
private = ""
protected = ""
public = ""
return = ""
short = ""
static = ""
strictfp = ""
super = ""
switch = ""
synchronized = ""
this = ""
throw = ""
throws = "" ; ANTLR keyword too
transient = ""
try = ""
void = ""
volatile = ""
while = ""

false = ""
null = ""
true = ""

; C# reserved keywords
abstract = ""
as = ""
base = ""
bool = ""
break = ""
byte = ""
case = ""
catch = ""
char = ""
checked = ""
class = ""
const = ""
continue = ""
decimal = ""
default = ""
delegate = ""
do = ""
double = ""
else = ""
enum = ""
event = ""
explicit = ""
extern = ""
false = ""
finally = ""
fixed = ""
float = ""
for = ""
foreach = ""
goto = ""
if = ""
implicit = ""
in = ""
int = ""
interface = ""
internal = ""
is = ""
lock = ""
long = ""
namespace = ""
new = ""
null = ""
object = ""
operator = ""
out = ""
override = ""
params = ""
private = ""
protected = ""
public = ""
readonly = ""
ref = ""
return = ""
sbyte = ""
sealed = ""
short = ""
sizeof = ""
stackalloc = ""
static = ""
string = ""
struct = ""
switch = ""
this = ""
throw = ""
true = ""
try = ""
typeof = ""
uint = ""
ulong = ""
unchecked = ""
unsafe = ""
ushort = ""
using = ""
virtual = ""
void = ""
volatile = ""
while = ""